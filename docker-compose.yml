version: '3.9'

services:
  db:
    container_name: postgres-facade-good
    image: postgres:14.0-alpine
    restart: always
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      facade-good:
        aliases:
          - db

  server:
    container_name: server-facade-good
    build:
      context: ./server
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - '${API_PORT}:3000'
    environment:
      - API_PORT=${API_PORT}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_HOST=db
      - MULTER_DEST=${MULTER_DEST}
      - IMAGES_FOLDER=${IMAGES_FOLDER}
    volumes:
      - assets:/app/assets
      - etc-letsencrypt:/etc/letsencrypt
    networks:
      facade-good:
        aliases:
          - server
  client:
    container_name: facade-good-client
    build: ./client
    depends_on:
      - server
    environment:
      - GATSBY_API_HOST=https://facade-good.ru
      - GATSBY_API_PORT=3000
    volumes:
      - www-html:/usr/share/nginx/html
    networks:
      facade-good:
        aliases:
          - client
  nginx:
    image: nginx:latest
    container_name: facade-good-nginx
    depends_on:
      - client
      - server
    ports:
      - "80:80"
      - '443:443'
    volumes:
      - www-html:/usr/share/nginx/html
      - etc-letsencrypt:/etc/letsencrypt
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      facade-good:
        aliases:
          - nginx

volumes:
  www-html:
  etc-letsencrypt:
  pgdata:
  assets:


networks:
  facade-good:
    driver: bridge
